name: PR pipeline

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test-pipeline:
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7]
        os: [ubuntu-latest]

    env:
      DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
      DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}

    steps:
      - uses: actions/checkout@v1

      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - uses: actions/cache@v2
        id: cache
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
            ${{ runner.os }}-pip-
      - name: Install pip
        run: python -m pip install --upgrade pip

      - name: Install dependencies
        run: pip install -U -r dev-requirements.txt
      
      - name: Deploy the code and launch integration tests
        run: |
          databricks repos update --path=/Repos/Staging/databricks-repos-ci-demo --branch=${{ env.GITHUB_HEAD_REF_SLUG }}
          dbx deploy --files-only --no-rebuild --deployment-file=conf/staging.json --no-package
          dbx launch --job=nutter-testing-suite --as-run-submit --trace